version: '3.9'

services:
  catalog:
  #the catalog api
    build:
      context: .
      dockerfile: Webshop.Catalog.Api/Dockerfile
    image: georgiatechlibrary/webshopcatalogapi
    ports:
      - "8082:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development  
    networks:
        - backtier
  customer:
  #the customer api
    build:
      context: .
      dockerfile: Webshop.Customer.Api/Dockerfile
    image: georgiatechlibrary/webshopcustomerapi
    ports:
      - "8083:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development 
    networks:
        - backtier 
  help:
  #the help web page
    build:
      context: .
      dockerfile: Webshop.Help/Dockerfile
    image: georgiatechlibrary/webshophelp
    ports:
        - "8081:8080"
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
    networks:
        - backtier
  orderapi:
  #the order api
    build:
      context: .
      dockerfile: Webshop.Order.Api/Dockerfile
    image: georgiatechlibrary/webshoporderapi
    ports:
      - "8084:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
        - backtier
  paymentapi:
  #the payment api
    build:
      context: .
      dockerfile: Webshop.Payment.Api/Dockerfile
    image: georgiatechlibrary/webshoppaymentapi
    ports:
      - "8085:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
        - backtier
  sqlexpress:
  #the sql server
    container_name: webshopdatabase
    image: mcr.microsoft.com/mssql/server:latest
    restart: unless-stopped
    ports:
        - 1433:1433
    environment:
        - ACCEPT_EULA=Y
        - SA_PASSWORD=WEBSHOP@password
        - MSSQL_PID=Express
    volumes:
        - ./data:/var/opt/mssql/data
    networks:
        - backtier
networks:
  # The presence of these objects is sufficient to define them
  backtier: {}